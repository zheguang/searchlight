// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linear_solver/linear_solver2.proto

#ifndef PROTOBUF_linear_5fsolver_2flinear_5fsolver2_2eproto__INCLUDED
#define PROTOBUF_linear_5fsolver_2flinear_5fsolver2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace operations_research {
namespace new_proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

class MPVariableProto;
class MPConstraintProto;
class MPConstraintProto_UnaryTerm;
class MPModelProto;
class MPModelRequest;
class MPSolutionResponse;
class Error;

enum MPModelRequest_SolverType {
  MPModelRequest_SolverType_CLP_LINEAR_PROGRAMMING = 0,
  MPModelRequest_SolverType_GLPK_LINEAR_PROGRAMMING = 1,
  MPModelRequest_SolverType_SCIP_MIXED_INTEGER_PROGRAMMING = 3,
  MPModelRequest_SolverType_GLPK_MIXED_INTEGER_PROGRAMMING = 4,
  MPModelRequest_SolverType_CBC_MIXED_INTEGER_PROGRAMMING = 5
};
bool MPModelRequest_SolverType_IsValid(int value);
const MPModelRequest_SolverType MPModelRequest_SolverType_SolverType_MIN = MPModelRequest_SolverType_CLP_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest_SolverType_SolverType_MAX = MPModelRequest_SolverType_CBC_MIXED_INTEGER_PROGRAMMING;
const int MPModelRequest_SolverType_SolverType_ARRAYSIZE = MPModelRequest_SolverType_SolverType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MPModelRequest_SolverType_descriptor();
inline const ::std::string& MPModelRequest_SolverType_Name(MPModelRequest_SolverType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MPModelRequest_SolverType_descriptor(), value);
}
inline bool MPModelRequest_SolverType_Parse(
    const ::std::string& name, MPModelRequest_SolverType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MPModelRequest_SolverType>(
    MPModelRequest_SolverType_descriptor(), name, value);
}
enum MPSolutionResponse_Status {
  MPSolutionResponse_Status_OPTIMAL = 0,
  MPSolutionResponse_Status_FEASIBLE = 1,
  MPSolutionResponse_Status_INFEASIBLE = 2,
  MPSolutionResponse_Status_UNBOUNDED = 3,
  MPSolutionResponse_Status_ABNORMAL = 4,
  MPSolutionResponse_Status_MODEL_INVALID = 5,
  MPSolutionResponse_Status_UNKNOWN = 99
};
bool MPSolutionResponse_Status_IsValid(int value);
const MPSolutionResponse_Status MPSolutionResponse_Status_Status_MIN = MPSolutionResponse_Status_OPTIMAL;
const MPSolutionResponse_Status MPSolutionResponse_Status_Status_MAX = MPSolutionResponse_Status_UNKNOWN;
const int MPSolutionResponse_Status_Status_ARRAYSIZE = MPSolutionResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* MPSolutionResponse_Status_descriptor();
inline const ::std::string& MPSolutionResponse_Status_Name(MPSolutionResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    MPSolutionResponse_Status_descriptor(), value);
}
inline bool MPSolutionResponse_Status_Parse(
    const ::std::string& name, MPSolutionResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MPSolutionResponse_Status>(
    MPSolutionResponse_Status_descriptor(), name, value);
}
enum Error_Code {
  Error_Code_NO_ERROR = 0,
  Error_Code_INVALID_PROBLEM_TYPE = 1,
  Error_Code_DUPLICATE_VARIABLE_ID = 2,
  Error_Code_UNKNOWN_VARIABLE_ID = 3,
  Error_Code_REQUEST_IS_QOD = 4,
  Error_Code_RPC_DEADLINE_TOO_SMALL = 5
};
bool Error_Code_IsValid(int value);
const Error_Code Error_Code_Code_MIN = Error_Code_NO_ERROR;
const Error_Code Error_Code_Code_MAX = Error_Code_RPC_DEADLINE_TOO_SMALL;
const int Error_Code_Code_ARRAYSIZE = Error_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_Code_descriptor();
inline const ::std::string& Error_Code_Name(Error_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_Code_descriptor(), value);
}
inline bool Error_Code_Parse(
    const ::std::string& name, Error_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_Code>(
    Error_Code_descriptor(), name, value);
}
// ===================================================================

class MPVariableProto : public ::google::protobuf::Message {
 public:
  MPVariableProto();
  virtual ~MPVariableProto();

  MPVariableProto(const MPVariableProto& from);

  inline MPVariableProto& operator=(const MPVariableProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPVariableProto& default_instance();

  void Swap(MPVariableProto* other);

  // implements Message ----------------------------------------------

  MPVariableProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPVariableProto& from);
  void MergeFrom(const MPVariableProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double lower_bound = 1 [default = -inf];
  inline bool has_lower_bound() const;
  inline void clear_lower_bound();
  static const int kLowerBoundFieldNumber = 1;
  inline double lower_bound() const;
  inline void set_lower_bound(double value);

  // optional double upper_bound = 2 [default = inf];
  inline bool has_upper_bound() const;
  inline void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 2;
  inline double upper_bound() const;
  inline void set_upper_bound(double value);

  // optional double objective_coefficient = 3 [default = 0];
  inline bool has_objective_coefficient() const;
  inline void clear_objective_coefficient();
  static const int kObjectiveCoefficientFieldNumber = 3;
  inline double objective_coefficient() const;
  inline void set_objective_coefficient(double value);

  // optional bool is_integer = 4 [default = false];
  inline bool has_is_integer() const;
  inline void clear_is_integer();
  static const int kIsIntegerFieldNumber = 4;
  inline bool is_integer() const;
  inline void set_is_integer(bool value);

  // optional string name = 5 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool can_also_be_zero = 6 [default = false];
  inline bool has_can_also_be_zero() const;
  inline void clear_can_also_be_zero();
  static const int kCanAlsoBeZeroFieldNumber = 6;
  inline bool can_also_be_zero() const;
  inline void set_can_also_be_zero(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPVariableProto)
 private:
  inline void set_has_lower_bound();
  inline void clear_has_lower_bound();
  inline void set_has_upper_bound();
  inline void clear_has_upper_bound();
  inline void set_has_objective_coefficient();
  inline void clear_has_objective_coefficient();
  inline void set_has_is_integer();
  inline void clear_has_is_integer();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_can_also_be_zero();
  inline void clear_has_can_also_be_zero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double lower_bound_;
  double upper_bound_;
  double objective_coefficient_;
  ::std::string* name_;
  bool is_integer_;
  bool can_also_be_zero_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPVariableProto* default_instance_;
};
// -------------------------------------------------------------------

class MPConstraintProto_UnaryTerm : public ::google::protobuf::Message {
 public:
  MPConstraintProto_UnaryTerm();
  virtual ~MPConstraintProto_UnaryTerm();

  MPConstraintProto_UnaryTerm(const MPConstraintProto_UnaryTerm& from);

  inline MPConstraintProto_UnaryTerm& operator=(const MPConstraintProto_UnaryTerm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPConstraintProto_UnaryTerm& default_instance();

  void Swap(MPConstraintProto_UnaryTerm* other);

  // implements Message ----------------------------------------------

  MPConstraintProto_UnaryTerm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPConstraintProto_UnaryTerm& from);
  void MergeFrom(const MPConstraintProto_UnaryTerm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 var_index = 1;
  inline bool has_var_index() const;
  inline void clear_var_index();
  static const int kVarIndexFieldNumber = 1;
  inline ::google::protobuf::int32 var_index() const;
  inline void set_var_index(::google::protobuf::int32 value);

  // optional double coefficient = 2 [default = 1];
  inline bool has_coefficient() const;
  inline void clear_coefficient();
  static const int kCoefficientFieldNumber = 2;
  inline double coefficient() const;
  inline void set_coefficient(double value);

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPConstraintProto.UnaryTerm)
 private:
  inline void set_has_var_index();
  inline void clear_has_var_index();
  inline void set_has_coefficient();
  inline void clear_has_coefficient();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double coefficient_;
  ::google::protobuf::int32 var_index_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPConstraintProto_UnaryTerm* default_instance_;
};
// -------------------------------------------------------------------

class MPConstraintProto : public ::google::protobuf::Message {
 public:
  MPConstraintProto();
  virtual ~MPConstraintProto();

  MPConstraintProto(const MPConstraintProto& from);

  inline MPConstraintProto& operator=(const MPConstraintProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPConstraintProto& default_instance();

  void Swap(MPConstraintProto* other);

  // implements Message ----------------------------------------------

  MPConstraintProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPConstraintProto& from);
  void MergeFrom(const MPConstraintProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MPConstraintProto_UnaryTerm UnaryTerm;

  // accessors -------------------------------------------------------

  // repeated int32 var_index = 6 [packed = true];
  inline int var_index_size() const;
  inline void clear_var_index();
  static const int kVarIndexFieldNumber = 6;
  inline ::google::protobuf::int32 var_index(int index) const;
  inline void set_var_index(int index, ::google::protobuf::int32 value);
  inline void add_var_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      var_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_var_index();

  // repeated double coefficient = 7 [packed = true];
  inline int coefficient_size() const;
  inline void clear_coefficient();
  static const int kCoefficientFieldNumber = 7;
  inline double coefficient(int index) const;
  inline void set_coefficient(int index, double value);
  inline void add_coefficient(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      coefficient() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_coefficient();

  // repeated .operations_research.new_proto.MPConstraintProto.UnaryTerm linear_term = 1;
  inline int linear_term_size() const;
  inline void clear_linear_term();
  static const int kLinearTermFieldNumber = 1;
  inline const ::operations_research::new_proto::MPConstraintProto_UnaryTerm& linear_term(int index) const;
  inline ::operations_research::new_proto::MPConstraintProto_UnaryTerm* mutable_linear_term(int index);
  inline ::operations_research::new_proto::MPConstraintProto_UnaryTerm* add_linear_term();
  inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto_UnaryTerm >&
      linear_term() const;
  inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto_UnaryTerm >*
      mutable_linear_term();

  // optional double lower_bound = 2 [default = -inf];
  inline bool has_lower_bound() const;
  inline void clear_lower_bound();
  static const int kLowerBoundFieldNumber = 2;
  inline double lower_bound() const;
  inline void set_lower_bound(double value);

  // optional double upper_bound = 3 [default = inf];
  inline bool has_upper_bound() const;
  inline void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 3;
  inline double upper_bound() const;
  inline void set_upper_bound(double value);

  // optional string name = 4 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool is_lazy = 5 [default = false];
  inline bool has_is_lazy() const;
  inline void clear_is_lazy();
  static const int kIsLazyFieldNumber = 5;
  inline bool is_lazy() const;
  inline void set_is_lazy(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPConstraintProto)
 private:
  inline void set_has_lower_bound();
  inline void clear_has_lower_bound();
  inline void set_has_upper_bound();
  inline void clear_has_upper_bound();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_is_lazy();
  inline void clear_has_is_lazy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > var_index_;
  mutable int _var_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > coefficient_;
  mutable int _coefficient_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto_UnaryTerm > linear_term_;
  double lower_bound_;
  double upper_bound_;
  ::std::string* name_;
  bool is_lazy_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPConstraintProto* default_instance_;
};
// -------------------------------------------------------------------

class MPModelProto : public ::google::protobuf::Message {
 public:
  MPModelProto();
  virtual ~MPModelProto();

  MPModelProto(const MPModelProto& from);

  inline MPModelProto& operator=(const MPModelProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPModelProto& default_instance();

  void Swap(MPModelProto* other);

  // implements Message ----------------------------------------------

  MPModelProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPModelProto& from);
  void MergeFrom(const MPModelProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool maximize = 1 [default = false];
  inline bool has_maximize() const;
  inline void clear_maximize();
  static const int kMaximizeFieldNumber = 1;
  inline bool maximize() const;
  inline void set_maximize(bool value);

  // optional double objective_offset = 2 [default = 0];
  inline bool has_objective_offset() const;
  inline void clear_objective_offset();
  static const int kObjectiveOffsetFieldNumber = 2;
  inline double objective_offset() const;
  inline void set_objective_offset(double value);

  // repeated .operations_research.new_proto.MPVariableProto variable = 3;
  inline int variable_size() const;
  inline void clear_variable();
  static const int kVariableFieldNumber = 3;
  inline const ::operations_research::new_proto::MPVariableProto& variable(int index) const;
  inline ::operations_research::new_proto::MPVariableProto* mutable_variable(int index);
  inline ::operations_research::new_proto::MPVariableProto* add_variable();
  inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPVariableProto >&
      variable() const;
  inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPVariableProto >*
      mutable_variable();

  // repeated .operations_research.new_proto.MPConstraintProto constraint = 4;
  inline int constraint_size() const;
  inline void clear_constraint();
  static const int kConstraintFieldNumber = 4;
  inline const ::operations_research::new_proto::MPConstraintProto& constraint(int index) const;
  inline ::operations_research::new_proto::MPConstraintProto* mutable_constraint(int index);
  inline ::operations_research::new_proto::MPConstraintProto* add_constraint();
  inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto >&
      constraint() const;
  inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto >*
      mutable_constraint();

  // optional string name = 5 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPModelProto)
 private:
  inline void set_has_maximize();
  inline void clear_has_maximize();
  inline void set_has_objective_offset();
  inline void clear_has_objective_offset();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double objective_offset_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPVariableProto > variable_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto > constraint_;
  ::std::string* name_;
  bool maximize_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPModelProto* default_instance_;
};
// -------------------------------------------------------------------

class MPModelRequest : public ::google::protobuf::Message {
 public:
  MPModelRequest();
  virtual ~MPModelRequest();

  MPModelRequest(const MPModelRequest& from);

  inline MPModelRequest& operator=(const MPModelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPModelRequest& default_instance();

  void Swap(MPModelRequest* other);

  // implements Message ----------------------------------------------

  MPModelRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPModelRequest& from);
  void MergeFrom(const MPModelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MPModelRequest_SolverType SolverType;
  static const SolverType CLP_LINEAR_PROGRAMMING = MPModelRequest_SolverType_CLP_LINEAR_PROGRAMMING;
  static const SolverType GLPK_LINEAR_PROGRAMMING = MPModelRequest_SolverType_GLPK_LINEAR_PROGRAMMING;
  static const SolverType SCIP_MIXED_INTEGER_PROGRAMMING = MPModelRequest_SolverType_SCIP_MIXED_INTEGER_PROGRAMMING;
  static const SolverType GLPK_MIXED_INTEGER_PROGRAMMING = MPModelRequest_SolverType_GLPK_MIXED_INTEGER_PROGRAMMING;
  static const SolverType CBC_MIXED_INTEGER_PROGRAMMING = MPModelRequest_SolverType_CBC_MIXED_INTEGER_PROGRAMMING;
  static inline bool SolverType_IsValid(int value) {
    return MPModelRequest_SolverType_IsValid(value);
  }
  static const SolverType SolverType_MIN =
    MPModelRequest_SolverType_SolverType_MIN;
  static const SolverType SolverType_MAX =
    MPModelRequest_SolverType_SolverType_MAX;
  static const int SolverType_ARRAYSIZE =
    MPModelRequest_SolverType_SolverType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SolverType_descriptor() {
    return MPModelRequest_SolverType_descriptor();
  }
  static inline const ::std::string& SolverType_Name(SolverType value) {
    return MPModelRequest_SolverType_Name(value);
  }
  static inline bool SolverType_Parse(const ::std::string& name,
      SolverType* value) {
    return MPModelRequest_SolverType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .operations_research.new_proto.MPModelProto model = 1;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 1;
  inline const ::operations_research::new_proto::MPModelProto& model() const;
  inline ::operations_research::new_proto::MPModelProto* mutable_model();
  inline ::operations_research::new_proto::MPModelProto* release_model();
  inline void set_allocated_model(::operations_research::new_proto::MPModelProto* model);

  // optional .operations_research.new_proto.MPModelRequest.SolverType solver_type = 2;
  inline bool has_solver_type() const;
  inline void clear_solver_type();
  static const int kSolverTypeFieldNumber = 2;
  inline ::operations_research::new_proto::MPModelRequest_SolverType solver_type() const;
  inline void set_solver_type(::operations_research::new_proto::MPModelRequest_SolverType value);

  // optional double solver_time_limit_seconds = 3;
  inline bool has_solver_time_limit_seconds() const;
  inline void clear_solver_time_limit_seconds();
  static const int kSolverTimeLimitSecondsFieldNumber = 3;
  inline double solver_time_limit_seconds() const;
  inline void set_solver_time_limit_seconds(double value);

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPModelRequest)
 private:
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_solver_type();
  inline void clear_has_solver_type();
  inline void set_has_solver_time_limit_seconds();
  inline void clear_has_solver_time_limit_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::operations_research::new_proto::MPModelProto* model_;
  double solver_time_limit_seconds_;
  int solver_type_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPModelRequest* default_instance_;
};
// -------------------------------------------------------------------

class MPSolutionResponse : public ::google::protobuf::Message {
 public:
  MPSolutionResponse();
  virtual ~MPSolutionResponse();

  MPSolutionResponse(const MPSolutionResponse& from);

  inline MPSolutionResponse& operator=(const MPSolutionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPSolutionResponse& default_instance();

  void Swap(MPSolutionResponse* other);

  // implements Message ----------------------------------------------

  MPSolutionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPSolutionResponse& from);
  void MergeFrom(const MPSolutionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MPSolutionResponse_Status Status;
  static const Status OPTIMAL = MPSolutionResponse_Status_OPTIMAL;
  static const Status FEASIBLE = MPSolutionResponse_Status_FEASIBLE;
  static const Status INFEASIBLE = MPSolutionResponse_Status_INFEASIBLE;
  static const Status UNBOUNDED = MPSolutionResponse_Status_UNBOUNDED;
  static const Status ABNORMAL = MPSolutionResponse_Status_ABNORMAL;
  static const Status MODEL_INVALID = MPSolutionResponse_Status_MODEL_INVALID;
  static const Status UNKNOWN = MPSolutionResponse_Status_UNKNOWN;
  static inline bool Status_IsValid(int value) {
    return MPSolutionResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    MPSolutionResponse_Status_Status_MIN;
  static const Status Status_MAX =
    MPSolutionResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    MPSolutionResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return MPSolutionResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return MPSolutionResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return MPSolutionResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .operations_research.new_proto.MPSolutionResponse.Status status = 1 [default = UNKNOWN];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::operations_research::new_proto::MPSolutionResponse_Status status() const;
  inline void set_status(::operations_research::new_proto::MPSolutionResponse_Status value);

  // optional double objective_value = 2;
  inline bool has_objective_value() const;
  inline void clear_objective_value();
  static const int kObjectiveValueFieldNumber = 2;
  inline double objective_value() const;
  inline void set_objective_value(double value);

  // repeated double variable_value = 3 [packed = true];
  inline int variable_value_size() const;
  inline void clear_variable_value();
  static const int kVariableValueFieldNumber = 3;
  inline double variable_value(int index) const;
  inline void set_variable_value(int index, double value);
  inline void add_variable_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      variable_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_variable_value();

  // repeated double dual_value = 4 [packed = true];
  inline int dual_value_size() const;
  inline void clear_dual_value();
  static const int kDualValueFieldNumber = 4;
  inline double dual_value(int index) const;
  inline void set_dual_value(int index, double value);
  inline void add_dual_value(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      dual_value() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_dual_value();

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.MPSolutionResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_objective_value();
  inline void clear_has_objective_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double objective_value_;
  ::google::protobuf::RepeatedField< double > variable_value_;
  mutable int _variable_value_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > dual_value_;
  mutable int _dual_value_cached_byte_size_;
  int status_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static MPSolutionResponse* default_instance_;
};
// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  Error* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Error_Code Code;
  static const Code NO_ERROR = Error_Code_NO_ERROR;
  static const Code INVALID_PROBLEM_TYPE = Error_Code_INVALID_PROBLEM_TYPE;
  static const Code DUPLICATE_VARIABLE_ID = Error_Code_DUPLICATE_VARIABLE_ID;
  static const Code UNKNOWN_VARIABLE_ID = Error_Code_UNKNOWN_VARIABLE_ID;
  static const Code REQUEST_IS_QOD = Error_Code_REQUEST_IS_QOD;
  static const Code RPC_DEADLINE_TOO_SMALL = Error_Code_RPC_DEADLINE_TOO_SMALL;
  static inline bool Code_IsValid(int value) {
    return Error_Code_IsValid(value);
  }
  static const Code Code_MIN =
    Error_Code_Code_MIN;
  static const Code Code_MAX =
    Error_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    Error_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return Error_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return Error_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return Error_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:operations_research.new_proto.Error)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_AssignDesc_linear_5fsolver_2flinear_5fsolver2_2eproto();
  friend void protobuf_ShutdownFile_linear_5fsolver_2flinear_5fsolver2_2eproto();

  void InitAsDefaultInstance();
  static Error* default_instance_;
};
// ===================================================================


// ===================================================================

// MPVariableProto

// optional double lower_bound = 1 [default = -inf];
inline bool MPVariableProto::has_lower_bound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPVariableProto::set_has_lower_bound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPVariableProto::clear_has_lower_bound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPVariableProto::clear_lower_bound() {
  lower_bound_ = -::google::protobuf::internal::Infinity();
  clear_has_lower_bound();
}
inline double MPVariableProto::lower_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.lower_bound)
  return lower_bound_;
}
inline void MPVariableProto::set_lower_bound(double value) {
  set_has_lower_bound();
  lower_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.lower_bound)
}

// optional double upper_bound = 2 [default = inf];
inline bool MPVariableProto::has_upper_bound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPVariableProto::set_has_upper_bound() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPVariableProto::clear_has_upper_bound() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPVariableProto::clear_upper_bound() {
  upper_bound_ = ::google::protobuf::internal::Infinity();
  clear_has_upper_bound();
}
inline double MPVariableProto::upper_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.upper_bound)
  return upper_bound_;
}
inline void MPVariableProto::set_upper_bound(double value) {
  set_has_upper_bound();
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.upper_bound)
}

// optional double objective_coefficient = 3 [default = 0];
inline bool MPVariableProto::has_objective_coefficient() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MPVariableProto::set_has_objective_coefficient() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MPVariableProto::clear_has_objective_coefficient() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MPVariableProto::clear_objective_coefficient() {
  objective_coefficient_ = 0;
  clear_has_objective_coefficient();
}
inline double MPVariableProto::objective_coefficient() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.objective_coefficient)
  return objective_coefficient_;
}
inline void MPVariableProto::set_objective_coefficient(double value) {
  set_has_objective_coefficient();
  objective_coefficient_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.objective_coefficient)
}

// optional bool is_integer = 4 [default = false];
inline bool MPVariableProto::has_is_integer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MPVariableProto::set_has_is_integer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MPVariableProto::clear_has_is_integer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MPVariableProto::clear_is_integer() {
  is_integer_ = false;
  clear_has_is_integer();
}
inline bool MPVariableProto::is_integer() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.is_integer)
  return is_integer_;
}
inline void MPVariableProto::set_is_integer(bool value) {
  set_has_is_integer();
  is_integer_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.is_integer)
}

// optional string name = 5 [default = ""];
inline bool MPVariableProto::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MPVariableProto::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MPVariableProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MPVariableProto::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MPVariableProto::name() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.name)
  return *name_;
}
inline void MPVariableProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.name)
}
inline void MPVariableProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.new_proto.MPVariableProto.name)
}
inline void MPVariableProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.new_proto.MPVariableProto.name)
}
inline ::std::string* MPVariableProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPVariableProto.name)
  return name_;
}
inline ::std::string* MPVariableProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MPVariableProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.new_proto.MPVariableProto.name)
}

// optional bool can_also_be_zero = 6 [default = false];
inline bool MPVariableProto::has_can_also_be_zero() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MPVariableProto::set_has_can_also_be_zero() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MPVariableProto::clear_has_can_also_be_zero() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MPVariableProto::clear_can_also_be_zero() {
  can_also_be_zero_ = false;
  clear_has_can_also_be_zero();
}
inline bool MPVariableProto::can_also_be_zero() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPVariableProto.can_also_be_zero)
  return can_also_be_zero_;
}
inline void MPVariableProto::set_can_also_be_zero(bool value) {
  set_has_can_also_be_zero();
  can_also_be_zero_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPVariableProto.can_also_be_zero)
}

// -------------------------------------------------------------------

// MPConstraintProto_UnaryTerm

// optional int32 var_index = 1;
inline bool MPConstraintProto_UnaryTerm::has_var_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPConstraintProto_UnaryTerm::set_has_var_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPConstraintProto_UnaryTerm::clear_has_var_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPConstraintProto_UnaryTerm::clear_var_index() {
  var_index_ = 0;
  clear_has_var_index();
}
inline ::google::protobuf::int32 MPConstraintProto_UnaryTerm::var_index() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.UnaryTerm.var_index)
  return var_index_;
}
inline void MPConstraintProto_UnaryTerm::set_var_index(::google::protobuf::int32 value) {
  set_has_var_index();
  var_index_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.UnaryTerm.var_index)
}

// optional double coefficient = 2 [default = 1];
inline bool MPConstraintProto_UnaryTerm::has_coefficient() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPConstraintProto_UnaryTerm::set_has_coefficient() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPConstraintProto_UnaryTerm::clear_has_coefficient() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPConstraintProto_UnaryTerm::clear_coefficient() {
  coefficient_ = 1;
  clear_has_coefficient();
}
inline double MPConstraintProto_UnaryTerm::coefficient() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.UnaryTerm.coefficient)
  return coefficient_;
}
inline void MPConstraintProto_UnaryTerm::set_coefficient(double value) {
  set_has_coefficient();
  coefficient_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.UnaryTerm.coefficient)
}

// -------------------------------------------------------------------

// MPConstraintProto

// repeated int32 var_index = 6 [packed = true];
inline int MPConstraintProto::var_index_size() const {
  return var_index_.size();
}
inline void MPConstraintProto::clear_var_index() {
  var_index_.Clear();
}
inline ::google::protobuf::int32 MPConstraintProto::var_index(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.var_index)
  return var_index_.Get(index);
}
inline void MPConstraintProto::set_var_index(int index, ::google::protobuf::int32 value) {
  var_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.var_index)
}
inline void MPConstraintProto::add_var_index(::google::protobuf::int32 value) {
  var_index_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPConstraintProto.var_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MPConstraintProto::var_index() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPConstraintProto.var_index)
  return var_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MPConstraintProto::mutable_var_index() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPConstraintProto.var_index)
  return &var_index_;
}

// repeated double coefficient = 7 [packed = true];
inline int MPConstraintProto::coefficient_size() const {
  return coefficient_.size();
}
inline void MPConstraintProto::clear_coefficient() {
  coefficient_.Clear();
}
inline double MPConstraintProto::coefficient(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.coefficient)
  return coefficient_.Get(index);
}
inline void MPConstraintProto::set_coefficient(int index, double value) {
  coefficient_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.coefficient)
}
inline void MPConstraintProto::add_coefficient(double value) {
  coefficient_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPConstraintProto.coefficient)
}
inline const ::google::protobuf::RepeatedField< double >&
MPConstraintProto::coefficient() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPConstraintProto.coefficient)
  return coefficient_;
}
inline ::google::protobuf::RepeatedField< double >*
MPConstraintProto::mutable_coefficient() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPConstraintProto.coefficient)
  return &coefficient_;
}

// repeated .operations_research.new_proto.MPConstraintProto.UnaryTerm linear_term = 1;
inline int MPConstraintProto::linear_term_size() const {
  return linear_term_.size();
}
inline void MPConstraintProto::clear_linear_term() {
  linear_term_.Clear();
}
inline const ::operations_research::new_proto::MPConstraintProto_UnaryTerm& MPConstraintProto::linear_term(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.linear_term)
  return linear_term_.Get(index);
}
inline ::operations_research::new_proto::MPConstraintProto_UnaryTerm* MPConstraintProto::mutable_linear_term(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPConstraintProto.linear_term)
  return linear_term_.Mutable(index);
}
inline ::operations_research::new_proto::MPConstraintProto_UnaryTerm* MPConstraintProto::add_linear_term() {
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPConstraintProto.linear_term)
  return linear_term_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto_UnaryTerm >&
MPConstraintProto::linear_term() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPConstraintProto.linear_term)
  return linear_term_;
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto_UnaryTerm >*
MPConstraintProto::mutable_linear_term() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPConstraintProto.linear_term)
  return &linear_term_;
}

// optional double lower_bound = 2 [default = -inf];
inline bool MPConstraintProto::has_lower_bound() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MPConstraintProto::set_has_lower_bound() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MPConstraintProto::clear_has_lower_bound() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MPConstraintProto::clear_lower_bound() {
  lower_bound_ = -::google::protobuf::internal::Infinity();
  clear_has_lower_bound();
}
inline double MPConstraintProto::lower_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.lower_bound)
  return lower_bound_;
}
inline void MPConstraintProto::set_lower_bound(double value) {
  set_has_lower_bound();
  lower_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.lower_bound)
}

// optional double upper_bound = 3 [default = inf];
inline bool MPConstraintProto::has_upper_bound() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MPConstraintProto::set_has_upper_bound() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MPConstraintProto::clear_has_upper_bound() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MPConstraintProto::clear_upper_bound() {
  upper_bound_ = ::google::protobuf::internal::Infinity();
  clear_has_upper_bound();
}
inline double MPConstraintProto::upper_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.upper_bound)
  return upper_bound_;
}
inline void MPConstraintProto::set_upper_bound(double value) {
  set_has_upper_bound();
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.upper_bound)
}

// optional string name = 4 [default = ""];
inline bool MPConstraintProto::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MPConstraintProto::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MPConstraintProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MPConstraintProto::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MPConstraintProto::name() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.name)
  return *name_;
}
inline void MPConstraintProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.name)
}
inline void MPConstraintProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.new_proto.MPConstraintProto.name)
}
inline void MPConstraintProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.new_proto.MPConstraintProto.name)
}
inline ::std::string* MPConstraintProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPConstraintProto.name)
  return name_;
}
inline ::std::string* MPConstraintProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MPConstraintProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.new_proto.MPConstraintProto.name)
}

// optional bool is_lazy = 5 [default = false];
inline bool MPConstraintProto::has_is_lazy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MPConstraintProto::set_has_is_lazy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MPConstraintProto::clear_has_is_lazy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MPConstraintProto::clear_is_lazy() {
  is_lazy_ = false;
  clear_has_is_lazy();
}
inline bool MPConstraintProto::is_lazy() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPConstraintProto.is_lazy)
  return is_lazy_;
}
inline void MPConstraintProto::set_is_lazy(bool value) {
  set_has_is_lazy();
  is_lazy_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPConstraintProto.is_lazy)
}

// -------------------------------------------------------------------

// MPModelProto

// optional bool maximize = 1 [default = false];
inline bool MPModelProto::has_maximize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPModelProto::set_has_maximize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPModelProto::clear_has_maximize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPModelProto::clear_maximize() {
  maximize_ = false;
  clear_has_maximize();
}
inline bool MPModelProto::maximize() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelProto.maximize)
  return maximize_;
}
inline void MPModelProto::set_maximize(bool value) {
  set_has_maximize();
  maximize_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPModelProto.maximize)
}

// optional double objective_offset = 2 [default = 0];
inline bool MPModelProto::has_objective_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPModelProto::set_has_objective_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPModelProto::clear_has_objective_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPModelProto::clear_objective_offset() {
  objective_offset_ = 0;
  clear_has_objective_offset();
}
inline double MPModelProto::objective_offset() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelProto.objective_offset)
  return objective_offset_;
}
inline void MPModelProto::set_objective_offset(double value) {
  set_has_objective_offset();
  objective_offset_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPModelProto.objective_offset)
}

// repeated .operations_research.new_proto.MPVariableProto variable = 3;
inline int MPModelProto::variable_size() const {
  return variable_.size();
}
inline void MPModelProto::clear_variable() {
  variable_.Clear();
}
inline const ::operations_research::new_proto::MPVariableProto& MPModelProto::variable(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelProto.variable)
  return variable_.Get(index);
}
inline ::operations_research::new_proto::MPVariableProto* MPModelProto::mutable_variable(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPModelProto.variable)
  return variable_.Mutable(index);
}
inline ::operations_research::new_proto::MPVariableProto* MPModelProto::add_variable() {
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPModelProto.variable)
  return variable_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPVariableProto >&
MPModelProto::variable() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPModelProto.variable)
  return variable_;
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPVariableProto >*
MPModelProto::mutable_variable() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPModelProto.variable)
  return &variable_;
}

// repeated .operations_research.new_proto.MPConstraintProto constraint = 4;
inline int MPModelProto::constraint_size() const {
  return constraint_.size();
}
inline void MPModelProto::clear_constraint() {
  constraint_.Clear();
}
inline const ::operations_research::new_proto::MPConstraintProto& MPModelProto::constraint(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelProto.constraint)
  return constraint_.Get(index);
}
inline ::operations_research::new_proto::MPConstraintProto* MPModelProto::mutable_constraint(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPModelProto.constraint)
  return constraint_.Mutable(index);
}
inline ::operations_research::new_proto::MPConstraintProto* MPModelProto::add_constraint() {
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPModelProto.constraint)
  return constraint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto >&
MPModelProto::constraint() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPModelProto.constraint)
  return constraint_;
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::new_proto::MPConstraintProto >*
MPModelProto::mutable_constraint() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPModelProto.constraint)
  return &constraint_;
}

// optional string name = 5 [default = ""];
inline bool MPModelProto::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MPModelProto::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MPModelProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MPModelProto::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MPModelProto::name() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelProto.name)
  return *name_;
}
inline void MPModelProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPModelProto.name)
}
inline void MPModelProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.new_proto.MPModelProto.name)
}
inline void MPModelProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.new_proto.MPModelProto.name)
}
inline ::std::string* MPModelProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPModelProto.name)
  return name_;
}
inline ::std::string* MPModelProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MPModelProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.new_proto.MPModelProto.name)
}

// -------------------------------------------------------------------

// MPModelRequest

// optional .operations_research.new_proto.MPModelProto model = 1;
inline bool MPModelRequest::has_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPModelRequest::set_has_model() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPModelRequest::clear_has_model() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPModelRequest::clear_model() {
  if (model_ != NULL) model_->::operations_research::new_proto::MPModelProto::Clear();
  clear_has_model();
}
inline const ::operations_research::new_proto::MPModelProto& MPModelRequest::model() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelRequest.model)
  return model_ != NULL ? *model_ : *default_instance_->model_;
}
inline ::operations_research::new_proto::MPModelProto* MPModelRequest::mutable_model() {
  set_has_model();
  if (model_ == NULL) model_ = new ::operations_research::new_proto::MPModelProto;
  // @@protoc_insertion_point(field_mutable:operations_research.new_proto.MPModelRequest.model)
  return model_;
}
inline ::operations_research::new_proto::MPModelProto* MPModelRequest::release_model() {
  clear_has_model();
  ::operations_research::new_proto::MPModelProto* temp = model_;
  model_ = NULL;
  return temp;
}
inline void MPModelRequest::set_allocated_model(::operations_research::new_proto::MPModelProto* model) {
  delete model_;
  model_ = model;
  if (model) {
    set_has_model();
  } else {
    clear_has_model();
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.new_proto.MPModelRequest.model)
}

// optional .operations_research.new_proto.MPModelRequest.SolverType solver_type = 2;
inline bool MPModelRequest::has_solver_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPModelRequest::set_has_solver_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPModelRequest::clear_has_solver_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPModelRequest::clear_solver_type() {
  solver_type_ = 0;
  clear_has_solver_type();
}
inline ::operations_research::new_proto::MPModelRequest_SolverType MPModelRequest::solver_type() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelRequest.solver_type)
  return static_cast< ::operations_research::new_proto::MPModelRequest_SolverType >(solver_type_);
}
inline void MPModelRequest::set_solver_type(::operations_research::new_proto::MPModelRequest_SolverType value) {
  assert(::operations_research::new_proto::MPModelRequest_SolverType_IsValid(value));
  set_has_solver_type();
  solver_type_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPModelRequest.solver_type)
}

// optional double solver_time_limit_seconds = 3;
inline bool MPModelRequest::has_solver_time_limit_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MPModelRequest::set_has_solver_time_limit_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MPModelRequest::clear_has_solver_time_limit_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MPModelRequest::clear_solver_time_limit_seconds() {
  solver_time_limit_seconds_ = 0;
  clear_has_solver_time_limit_seconds();
}
inline double MPModelRequest::solver_time_limit_seconds() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPModelRequest.solver_time_limit_seconds)
  return solver_time_limit_seconds_;
}
inline void MPModelRequest::set_solver_time_limit_seconds(double value) {
  set_has_solver_time_limit_seconds();
  solver_time_limit_seconds_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPModelRequest.solver_time_limit_seconds)
}

// -------------------------------------------------------------------

// MPSolutionResponse

// optional .operations_research.new_proto.MPSolutionResponse.Status status = 1 [default = UNKNOWN];
inline bool MPSolutionResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPSolutionResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPSolutionResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPSolutionResponse::clear_status() {
  status_ = 99;
  clear_has_status();
}
inline ::operations_research::new_proto::MPSolutionResponse_Status MPSolutionResponse::status() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPSolutionResponse.status)
  return static_cast< ::operations_research::new_proto::MPSolutionResponse_Status >(status_);
}
inline void MPSolutionResponse::set_status(::operations_research::new_proto::MPSolutionResponse_Status value) {
  assert(::operations_research::new_proto::MPSolutionResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPSolutionResponse.status)
}

// optional double objective_value = 2;
inline bool MPSolutionResponse::has_objective_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPSolutionResponse::set_has_objective_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPSolutionResponse::clear_has_objective_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPSolutionResponse::clear_objective_value() {
  objective_value_ = 0;
  clear_has_objective_value();
}
inline double MPSolutionResponse::objective_value() const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPSolutionResponse.objective_value)
  return objective_value_;
}
inline void MPSolutionResponse::set_objective_value(double value) {
  set_has_objective_value();
  objective_value_ = value;
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPSolutionResponse.objective_value)
}

// repeated double variable_value = 3 [packed = true];
inline int MPSolutionResponse::variable_value_size() const {
  return variable_value_.size();
}
inline void MPSolutionResponse::clear_variable_value() {
  variable_value_.Clear();
}
inline double MPSolutionResponse::variable_value(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPSolutionResponse.variable_value)
  return variable_value_.Get(index);
}
inline void MPSolutionResponse::set_variable_value(int index, double value) {
  variable_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPSolutionResponse.variable_value)
}
inline void MPSolutionResponse::add_variable_value(double value) {
  variable_value_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPSolutionResponse.variable_value)
}
inline const ::google::protobuf::RepeatedField< double >&
MPSolutionResponse::variable_value() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPSolutionResponse.variable_value)
  return variable_value_;
}
inline ::google::protobuf::RepeatedField< double >*
MPSolutionResponse::mutable_variable_value() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPSolutionResponse.variable_value)
  return &variable_value_;
}

// repeated double dual_value = 4 [packed = true];
inline int MPSolutionResponse::dual_value_size() const {
  return dual_value_.size();
}
inline void MPSolutionResponse::clear_dual_value() {
  dual_value_.Clear();
}
inline double MPSolutionResponse::dual_value(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.new_proto.MPSolutionResponse.dual_value)
  return dual_value_.Get(index);
}
inline void MPSolutionResponse::set_dual_value(int index, double value) {
  dual_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.new_proto.MPSolutionResponse.dual_value)
}
inline void MPSolutionResponse::add_dual_value(double value) {
  dual_value_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.new_proto.MPSolutionResponse.dual_value)
}
inline const ::google::protobuf::RepeatedField< double >&
MPSolutionResponse::dual_value() const {
  // @@protoc_insertion_point(field_list:operations_research.new_proto.MPSolutionResponse.dual_value)
  return dual_value_;
}
inline ::google::protobuf::RepeatedField< double >*
MPSolutionResponse::mutable_dual_value() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.new_proto.MPSolutionResponse.dual_value)
  return &dual_value_;
}

// -------------------------------------------------------------------

// Error


// @@protoc_insertion_point(namespace_scope)

}  // namespace new_proto
}  // namespace operations_research

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::operations_research::new_proto::MPModelRequest_SolverType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::operations_research::new_proto::MPModelRequest_SolverType>() {
  return ::operations_research::new_proto::MPModelRequest_SolverType_descriptor();
}
template <> struct is_proto_enum< ::operations_research::new_proto::MPSolutionResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::operations_research::new_proto::MPSolutionResponse_Status>() {
  return ::operations_research::new_proto::MPSolutionResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::operations_research::new_proto::Error_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::operations_research::new_proto::Error_Code>() {
  return ::operations_research::new_proto::Error_Code_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_linear_5fsolver_2flinear_5fsolver2_2eproto__INCLUDED
