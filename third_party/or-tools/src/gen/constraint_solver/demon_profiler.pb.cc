// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constraint_solver/demon_profiler.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "constraint_solver/demon_profiler.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace operations_research {

namespace {

const ::google::protobuf::Descriptor* DemonRuns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DemonRuns_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConstraintRuns_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConstraintRuns_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto() {
  protobuf_AddDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "constraint_solver/demon_profiler.proto");
  GOOGLE_CHECK(file != NULL);
  DemonRuns_descriptor_ = file->message_type(0);
  static const int DemonRuns_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, demon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, failures_),
  };
  DemonRuns_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DemonRuns_descriptor_,
      DemonRuns::default_instance_,
      DemonRuns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DemonRuns, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DemonRuns));
  ConstraintRuns_descriptor_ = file->message_type(1);
  static const int ConstraintRuns_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, constraint_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, initial_propagation_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, initial_propagation_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, failures_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, demons_),
  };
  ConstraintRuns_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConstraintRuns_descriptor_,
      ConstraintRuns::default_instance_,
      ConstraintRuns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintRuns, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConstraintRuns));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DemonRuns_descriptor_, &DemonRuns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConstraintRuns_descriptor_, &ConstraintRuns::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_constraint_5fsolver_2fdemon_5fprofiler_2eproto() {
  delete DemonRuns::default_instance_;
  delete DemonRuns_reflection_;
  delete ConstraintRuns::default_instance_;
  delete ConstraintRuns_reflection_;
}

void protobuf_AddDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&constraint_solver/demon_profiler.proto"
    "\022\023operations_research\"U\n\tDemonRuns\022\020\n\010de"
    "mon_id\030\001 \002(\t\022\022\n\nstart_time\030\002 \003(\003\022\020\n\010end_"
    "time\030\003 \003(\003\022\020\n\010failures\030\004 \002(\003\"\267\001\n\016Constra"
    "intRuns\022\025\n\rconstraint_id\030\001 \002(\t\022&\n\036initia"
    "l_propagation_start_time\030\002 \003(\003\022$\n\034initia"
    "l_propagation_end_time\030\003 \003(\003\022\020\n\010failures"
    "\030\004 \002(\003\022.\n\006demons\030\005 \003(\0132\036.operations_rese"
    "arch.DemonRuns", 334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "constraint_solver/demon_profiler.proto", &protobuf_RegisterTypes);
  DemonRuns::default_instance_ = new DemonRuns();
  ConstraintRuns::default_instance_ = new ConstraintRuns();
  DemonRuns::default_instance_->InitAsDefaultInstance();
  ConstraintRuns::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_constraint_5fsolver_2fdemon_5fprofiler_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_constraint_5fsolver_2fdemon_5fprofiler_2eproto {
  StaticDescriptorInitializer_constraint_5fsolver_2fdemon_5fprofiler_2eproto() {
    protobuf_AddDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto();
  }
} static_descriptor_initializer_constraint_5fsolver_2fdemon_5fprofiler_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DemonRuns::kDemonIdFieldNumber;
const int DemonRuns::kStartTimeFieldNumber;
const int DemonRuns::kEndTimeFieldNumber;
const int DemonRuns::kFailuresFieldNumber;
#endif  // !_MSC_VER

DemonRuns::DemonRuns()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.DemonRuns)
}

void DemonRuns::InitAsDefaultInstance() {
}

DemonRuns::DemonRuns(const DemonRuns& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operations_research.DemonRuns)
}

void DemonRuns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  demon_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  failures_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DemonRuns::~DemonRuns() {
  // @@protoc_insertion_point(destructor:operations_research.DemonRuns)
  SharedDtor();
}

void DemonRuns::SharedDtor() {
  if (demon_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete demon_id_;
  }
  if (this != default_instance_) {
  }
}

void DemonRuns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DemonRuns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DemonRuns_descriptor_;
}

const DemonRuns& DemonRuns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto();
  return *default_instance_;
}

DemonRuns* DemonRuns::default_instance_ = NULL;

DemonRuns* DemonRuns::New() const {
  return new DemonRuns;
}

void DemonRuns::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    if (has_demon_id()) {
      if (demon_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        demon_id_->clear();
      }
    }
    failures_ = GOOGLE_LONGLONG(0);
  }
  start_time_.Clear();
  end_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DemonRuns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.DemonRuns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string demon_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_demon_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->demon_id().data(), this->demon_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "demon_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_start_time;
        break;
      }

      // repeated int64 start_time = 2;
      case 2: {
        if (tag == 16) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_start_time())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_start_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_start_time;
        if (input->ExpectTag(24)) goto parse_end_time;
        break;
      }

      // repeated int64 end_time = 3;
      case 3: {
        if (tag == 24) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_end_time())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_end_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_end_time;
        if (input->ExpectTag(32)) goto parse_failures;
        break;
      }

      // required int64 failures = 4;
      case 4: {
        if (tag == 32) {
         parse_failures:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &failures_)));
          set_has_failures();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.DemonRuns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.DemonRuns)
  return false;
#undef DO_
}

void DemonRuns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.DemonRuns)
  // required string demon_id = 1;
  if (has_demon_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->demon_id().data(), this->demon_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "demon_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->demon_id(), output);
  }

  // repeated int64 start_time = 2;
  for (int i = 0; i < this->start_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->start_time(i), output);
  }

  // repeated int64 end_time = 3;
  for (int i = 0; i < this->end_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->end_time(i), output);
  }

  // required int64 failures = 4;
  if (has_failures()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->failures(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.DemonRuns)
}

::google::protobuf::uint8* DemonRuns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.DemonRuns)
  // required string demon_id = 1;
  if (has_demon_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->demon_id().data(), this->demon_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "demon_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->demon_id(), target);
  }

  // repeated int64 start_time = 2;
  for (int i = 0; i < this->start_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->start_time(i), target);
  }

  // repeated int64 end_time = 3;
  for (int i = 0; i < this->end_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->end_time(i), target);
  }

  // required int64 failures = 4;
  if (has_failures()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->failures(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.DemonRuns)
  return target;
}

int DemonRuns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string demon_id = 1;
    if (has_demon_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->demon_id());
    }

    // required int64 failures = 4;
    if (has_failures()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->failures());
    }

  }
  // repeated int64 start_time = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->start_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->start_time(i));
    }
    total_size += 1 * this->start_time_size() + data_size;
  }

  // repeated int64 end_time = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->end_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->end_time(i));
    }
    total_size += 1 * this->end_time_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DemonRuns::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DemonRuns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DemonRuns*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DemonRuns::MergeFrom(const DemonRuns& from) {
  GOOGLE_CHECK_NE(&from, this);
  start_time_.MergeFrom(from.start_time_);
  end_time_.MergeFrom(from.end_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_demon_id()) {
      set_demon_id(from.demon_id());
    }
    if (from.has_failures()) {
      set_failures(from.failures());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DemonRuns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DemonRuns::CopyFrom(const DemonRuns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DemonRuns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void DemonRuns::Swap(DemonRuns* other) {
  if (other != this) {
    std::swap(demon_id_, other->demon_id_);
    start_time_.Swap(&other->start_time_);
    end_time_.Swap(&other->end_time_);
    std::swap(failures_, other->failures_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DemonRuns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DemonRuns_descriptor_;
  metadata.reflection = DemonRuns_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConstraintRuns::kConstraintIdFieldNumber;
const int ConstraintRuns::kInitialPropagationStartTimeFieldNumber;
const int ConstraintRuns::kInitialPropagationEndTimeFieldNumber;
const int ConstraintRuns::kFailuresFieldNumber;
const int ConstraintRuns::kDemonsFieldNumber;
#endif  // !_MSC_VER

ConstraintRuns::ConstraintRuns()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.ConstraintRuns)
}

void ConstraintRuns::InitAsDefaultInstance() {
}

ConstraintRuns::ConstraintRuns(const ConstraintRuns& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operations_research.ConstraintRuns)
}

void ConstraintRuns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  constraint_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  failures_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConstraintRuns::~ConstraintRuns() {
  // @@protoc_insertion_point(destructor:operations_research.ConstraintRuns)
  SharedDtor();
}

void ConstraintRuns::SharedDtor() {
  if (constraint_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete constraint_id_;
  }
  if (this != default_instance_) {
  }
}

void ConstraintRuns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstraintRuns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConstraintRuns_descriptor_;
}

const ConstraintRuns& ConstraintRuns::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_constraint_5fsolver_2fdemon_5fprofiler_2eproto();
  return *default_instance_;
}

ConstraintRuns* ConstraintRuns::default_instance_ = NULL;

ConstraintRuns* ConstraintRuns::New() const {
  return new ConstraintRuns;
}

void ConstraintRuns::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    if (has_constraint_id()) {
      if (constraint_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        constraint_id_->clear();
      }
    }
    failures_ = GOOGLE_LONGLONG(0);
  }
  initial_propagation_start_time_.Clear();
  initial_propagation_end_time_.Clear();
  demons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConstraintRuns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.ConstraintRuns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string constraint_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_constraint_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->constraint_id().data(), this->constraint_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "constraint_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_initial_propagation_start_time;
        break;
      }

      // repeated int64 initial_propagation_start_time = 2;
      case 2: {
        if (tag == 16) {
         parse_initial_propagation_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_initial_propagation_start_time())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_initial_propagation_start_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_initial_propagation_start_time;
        if (input->ExpectTag(24)) goto parse_initial_propagation_end_time;
        break;
      }

      // repeated int64 initial_propagation_end_time = 3;
      case 3: {
        if (tag == 24) {
         parse_initial_propagation_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_initial_propagation_end_time())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_initial_propagation_end_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_initial_propagation_end_time;
        if (input->ExpectTag(32)) goto parse_failures;
        break;
      }

      // required int64 failures = 4;
      case 4: {
        if (tag == 32) {
         parse_failures:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &failures_)));
          set_has_failures();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_demons;
        break;
      }

      // repeated .operations_research.DemonRuns demons = 5;
      case 5: {
        if (tag == 42) {
         parse_demons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_demons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_demons;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.ConstraintRuns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.ConstraintRuns)
  return false;
#undef DO_
}

void ConstraintRuns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.ConstraintRuns)
  // required string constraint_id = 1;
  if (has_constraint_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constraint_id().data(), this->constraint_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "constraint_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->constraint_id(), output);
  }

  // repeated int64 initial_propagation_start_time = 2;
  for (int i = 0; i < this->initial_propagation_start_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->initial_propagation_start_time(i), output);
  }

  // repeated int64 initial_propagation_end_time = 3;
  for (int i = 0; i < this->initial_propagation_end_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->initial_propagation_end_time(i), output);
  }

  // required int64 failures = 4;
  if (has_failures()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->failures(), output);
  }

  // repeated .operations_research.DemonRuns demons = 5;
  for (int i = 0; i < this->demons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->demons(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.ConstraintRuns)
}

::google::protobuf::uint8* ConstraintRuns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.ConstraintRuns)
  // required string constraint_id = 1;
  if (has_constraint_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->constraint_id().data(), this->constraint_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "constraint_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->constraint_id(), target);
  }

  // repeated int64 initial_propagation_start_time = 2;
  for (int i = 0; i < this->initial_propagation_start_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->initial_propagation_start_time(i), target);
  }

  // repeated int64 initial_propagation_end_time = 3;
  for (int i = 0; i < this->initial_propagation_end_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->initial_propagation_end_time(i), target);
  }

  // required int64 failures = 4;
  if (has_failures()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->failures(), target);
  }

  // repeated .operations_research.DemonRuns demons = 5;
  for (int i = 0; i < this->demons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->demons(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.ConstraintRuns)
  return target;
}

int ConstraintRuns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string constraint_id = 1;
    if (has_constraint_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->constraint_id());
    }

    // required int64 failures = 4;
    if (has_failures()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->failures());
    }

  }
  // repeated int64 initial_propagation_start_time = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->initial_propagation_start_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->initial_propagation_start_time(i));
    }
    total_size += 1 * this->initial_propagation_start_time_size() + data_size;
  }

  // repeated int64 initial_propagation_end_time = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->initial_propagation_end_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->initial_propagation_end_time(i));
    }
    total_size += 1 * this->initial_propagation_end_time_size() + data_size;
  }

  // repeated .operations_research.DemonRuns demons = 5;
  total_size += 1 * this->demons_size();
  for (int i = 0; i < this->demons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->demons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstraintRuns::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConstraintRuns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConstraintRuns*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConstraintRuns::MergeFrom(const ConstraintRuns& from) {
  GOOGLE_CHECK_NE(&from, this);
  initial_propagation_start_time_.MergeFrom(from.initial_propagation_start_time_);
  initial_propagation_end_time_.MergeFrom(from.initial_propagation_end_time_);
  demons_.MergeFrom(from.demons_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_constraint_id()) {
      set_constraint_id(from.constraint_id());
    }
    if (from.has_failures()) {
      set_failures(from.failures());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConstraintRuns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstraintRuns::CopyFrom(const ConstraintRuns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintRuns::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->demons())) return false;
  return true;
}

void ConstraintRuns::Swap(ConstraintRuns* other) {
  if (other != this) {
    std::swap(constraint_id_, other->constraint_id_);
    initial_propagation_start_time_.Swap(&other->initial_propagation_start_time_);
    initial_propagation_end_time_.Swap(&other->initial_propagation_end_time_);
    std::swap(failures_, other->failures_);
    demons_.Swap(&other->demons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConstraintRuns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConstraintRuns_descriptor_;
  metadata.reflection = ConstraintRuns_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace operations_research

// @@protoc_insertion_point(global_scope)
